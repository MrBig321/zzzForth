( The code below uses the code in vecmat.txt)

DECIMAL

( 8 vertices of CUBE)
VEC3 V1
-0.25 1 V1 F! 0.25 2 V1 F! -0.25 3 V1 F! 
VEC3 V2
0.25 1 V2 F! 0.25 2 V2 F! -0.25 3 V2 F! 
VEC3 V3
0.25 1 V3 F! -0.25 2 V3 F! -0.25 3 V3 F! 
VEC3 V4
-0.25 1 V4 F! -0.25 2 V4 F! -0.25 3 V4 F! 
VEC3 V5
-0.25 1 V5 F! 0.25 2 V5 F! 0.25 3 V5 F! 
VEC3 V6
0.25 1 V6 F! 0.25 2 V6 F! 0.25 3 V6 F! 
VEC3 V7
0.25 1 V7 F! -0.25 2 V7 F! 0.25 3 V7 F! 
VEC3 V8
-0.25 1 V8 F! -0.25 2 V8 F! 0.25 3 V8 F! 
CREATE VERTICES 1 V1 , 1 V2 , 1 V3 , 1 V4 , 1 V5 , 1 V6 , 1 V7 , 1 V8 ,
8 CONSTANT VERTEXNUM
4 CONSTANT FACECOORDSCNT
CREATE FACE1 0 , 1 , 2 , 3 ,		( face1 of the cube consists of vertices 1, 2, 3, 4)
CREATE FACE2 1 , 5 , 6 , 2 , 
CREATE FACE3 5 , 4 , 7 , 6 , 
CREATE FACE4 4 , 0 , 3 , 7 , 
CREATE FACE5 0 , 4 , 5 , 1 , 
CREATE FACE6 3 , 2 , 6 , 7 , 
CREATE FACES FACE1 , FACE2 , FACE3 , FACE4 , FACE5 , FACE6 , 
6 CONSTANT FACENUM
VARIABLE COORDS 2 VERTEXNUM * 1- CELLS ALLOT			( the transformed [x,y] coords, ints)
VARIABLE POLYCOORDS 2 FACECOORDSCNT * 1- CELLS ALLOT

SCRW @ I2F FCONSTANT FSCRW
SCRH @ I2F FCONSTANT FSCRH

VARIABLE CLR	 	( color of CUBE)

( Scaling)
FVARIABLE SCALEX FVARIABLE SCALEY FVARIABLE SCALEZ
MAT	MSCALE

( Shearing)
FVARIABLE SHEARXYA FVARIABLE SHEARXYB FVARIABLE SHEARXZA FVARIABLE SHEARXZC FVARIABLE SHEARYZB FVARIABLE SHEARYZC
MAT	MSHEARXY
MAT	MSHEARXZ
MAT	MSHEARYZ
MAT	MSHEAR

( Rotation)
VEC3 VROTDEGS
MAT MROTX
MAT MROTY
MAT MROTZ
MAT MROT

( Translation)
VEC3 VTRANS
MAT	MTRANS

: UPDSCALE  ( -- )
  SCALEX F@ 1 1 MSCALE F!
  SCALEY F@ 2 2 MSCALE F!
  SCALEZ F@ 3 3 MSCALE F! ;

: UPDSHEARXY  ( -- )
  SHEARXYA F@ 1 3 MSHEARXY F!
  SHEARXYB F@ 2 3 MSHEARXY F! ;

: UPDSHEARXZ  ( -- )
  SHEARXZA F@ 1 2 MSHEARXZ F!
  SHEARXZC F@ 3 2 MSHEARXZ F! ;

: UPDSHEARYZ  ( -- )
  SHEARYZB F@ 2 1 MSHEARYZ F!
  SHEARYZC F@ 3 1 MSHEARYZ F! ;

: UPDSHEAR  ( -- )
  UPDSHEARXY UPDSHEARXZ UPDSHEARYZ
  MATRESADDR @ MAT0					( clear result matrix)
  1 1 MSHEARXY 1 1 MSHEARXZ MM*
  MATRESADDR @ 1 1 MSHEAR MATCP		( copy result)
  MATRESADDR @ MAT0					( clear result matrix)
  1 1 MSHEAR 1 1 MSHEARYZ MM*
  MATRESADDR @ 1 1 MSHEAR MATCP ;	( copy result)

: UPDROTX  ( -- )
  1 VROTDEGS F@ FRADIANS FCOS 2 2 MROTX F!
  1 VROTDEGS F@ FRADIANS FSIN FNEGATE 2 3 MROTX F!
  1 VROTDEGS F@ FRADIANS FSIN 3 2 MROTX F!
  1 VROTDEGS F@ FRADIANS FCOS 3 3 MROTX F! ;

: UPDROTY  ( -- )
  2 VROTDEGS F@ FRADIANS FCOS 1 1 MROTY F!
  2 VROTDEGS F@ FRADIANS FSIN 1 3 MROTY F!
  2 VROTDEGS F@ FRADIANS FSIN FNEGATE 3 1 MROTY F!
  2 VROTDEGS F@ FRADIANS FCOS 3 3 MROTY F! ;

: UPDROTZ  ( -- )
  3 VROTDEGS F@ FRADIANS FCOS 1 1 MROTZ F!
  3 VROTDEGS F@ FRADIANS FSIN FNEGATE 1 2 MROTZ F!
  3 VROTDEGS F@ FRADIANS FSIN 2 1 MROTZ F!
  3 VROTDEGS F@ FRADIANS FCOS 2 2 MROTZ F! ;

: UPDROT  ( -- )
  UPDROTX UPDROTY UPDROTZ
  MATRESADDR @ MAT0				( clear result matrix)
  1 1 MROTX 1 1 MROTY MM*
  MATRESADDR @ 1 1 MROT MATCP	( copy result)
  MATRESADDR @ MAT0				( clear result matrix)
  1 1 MROT 1 1 MROTZ MM*
  MATRESADDR @ 1 1 MROT MATCP ;	( copy result)

: UPDTRANS  ( -- )
  1 VTRANS F@ 1 4 MTRANS F!
  2 VTRANS F@ 2 4 MTRANS F!
  3 VTRANS F@ 3 4 MTRANS F! ;

( Projection; common in all objects)
FVARIABLE S
90.0 FCONSTANT FOV
100.0 FCONSTANT ZFAR
0.1 FCONSTANT ZNEAR
1.0 FOV 2.0 F/ FRADIANS FTAN F/ S F!
MAT MPROJ
S F@ 1 1 MPROJ F!
( S F@ FSCRW FSCRH F/ F/ 1 1 MPROJ F!)
S F@ 2 2 MPROJ F!
ZFAR FNEGATE ZFAR ZNEAR F- F/ 3 3 MPROJ F!
( ZFAR ZNEAR F+ ZNEAR ZFAR F- F/ 3 3 MPROJ F!)
ZFAR ZNEAR F* FNEGATE ZFAR ZNEAR F- F/ 3 4 MPROJ F!
( 2.0 ZFAR ZNEAR F* F* ZNEAR ZFAR F- F/ 3 4 MPROJ F!)
-1.0 4 3 MPROJ F!

( common)
: TOSCRCOORDS  ( addrv -- )  ( addr of result vector in VECRESADDR)
  DUP F@ 1.0 F+ 0.5 F* FSCRW F* FSCRW 1.0 F- FMIN VECRESADDR @ F!
  1.0 FLOAT+ F@ 1.0 F+ 0.5 F* F- FSCRH F* FSCRH 1.0 F- FMIN VECRESADDR @ FLOAT+ F!
  1.0 VECRESADDR @ FLOAT+ FLOAT+ F! ;

( common)
: INIT ( -- )
 PAGE 3 30 AT-XY S" Press SPACE to Quit" TYPE ; 

VEC3 VECTMP	( vector for tmp result)
VEC3 PVEC	( vector for tmp result)
MAT MMAT	( scaling*shearing*rotation*translation)
MAT MMATTMP	( tmp result)

: UPDMAT  ( -- )
  UPDSCALE UPDSHEAR UPDROT UPDTRANS
  MATRESADDR @ MAT0					( clear result-matrix)
  1 1 MSCALE 1 1 MSHEAR MM*
  MATRESADDR @ 1 1 MMAT MATCP		( copy result)
  MATRESADDR @ MAT0
  1 1 MROT 1 1 MMAT MM*
  MATRESADDR @ 1 1 MMAT MATCP
  MATRESADDR @ MAT0
  1 1 MTRANS 1 1 MMAT MM*
  MATRESADDR @ 1 1 MMAT MATCP ;


: TRANSFORM  ( -- )
  VERTEXNUM 0 DO 
  1 VECTMP VEC30
  1 VECTMP VECRESADDR !
  1 1 MMAT VERTICES I CELLS + @ MV* 
  1 PVEC VEC30
  1 PVEC VECRESADDR !
  1 1 MPROJ 1 VECTMP MV* 
  1 PVEC TOSCRCOORDS         ( result in VECRESADDR; same as input!)
  1 PVEC F@ F2INT COORDS I 2 * CELLS + DUP >R ! 2 PVEC F@ F2INT R> CELL+ !
  LOOP ;

: DRAW ( -- )
  FACENUM 0 DO FACES I CELLS + @ 
  FACECOORDSCNT 0 DO DUP I CELLS + 
  COORDS SWAP @ 2 * CELLS + DUP @ POLYCOORDS I 2 * CELLS + DUP ROT SWAP ! CELL+ SWAP CELL+ @ SWAP ! LOOP DROP 
  POLYCOORDS FACECOORDSCNT 0 DO DUP @ SWAP CELL+ DUP @ SWAP CELL+ LOOP DROP 
  CLR @ FACECOORDSCNT POLY LOOP ;  

: CUBE  UPDMAT TRANSFORM DRAW INVSCR ;

: WAITSPACE  BEGIN PAUSE KEY 32 = UNTIL DISCARD ; 


1 1 MMATTMP MATRESADDR !

INIT

HEX F800 DECIMAL CLR !	( red)
0.0 SHEARXYA F! 0.0 SHEARXYB F! 0.0 SHEARXZA F! 0.0 SHEARXZC F! 0.0 SHEARYZB F! 0.0 SHEARYZC F!	( no shear)
1.0 SCALEX F! 1.0 SCALEY F! 1.0 SCALEZ F!					( don't scale)
30.0 2 VROTDEGS F!											( rotate around y-axis)
-0.7 1 VTRANS F! 0.0 2 VTRANS F! -0.5 3 VTRANS F!			( shift to the left and down the Z-axis; translate)
CUBE

HEX 7E0 DECIMAL CLR !	( green)
30.0 1 VROTDEGS F! 0.0 2 VROTDEGS F! 15.0 3 VROTDEGS F! 	( rotate around x-axis and z-axis)
0.3 1 VTRANS F! 0.0 2 VTRANS F! 0.0 3 VTRANS F!				( shift to the right; translate)
CUBE

WAITSPACE




