: HEXDUMP ;  ( marker for FORGET)

DECIMAL 

10000 CONSTANT LIMITLEN
12 CONSTANT BYTESPERROW 

VARIABLE LASTCNT

: KEY? KEYW DISCARD DROP ;

: DIGS2  ( b -- )
   DUP 4 RSHIFT 0= IF 48 EMIT THEN U. ; 

: PRINTABLE? ( c -- flag )
   DUP 32 >= SWAP 127 < AND ;

: PRINTCHS  ( addr len -- )
   0 DO DUP C@ DUP PRINTABLE? IF EMIT ELSE DROP 46 EMIT THEN 1+ LOOP DROP ;

: PRINTADDR  ( addr -- )
   32 7 0 DO 4 - 2DUP RSHIFT 0= IF 48 EMIT ELSE LEAVE THEN LOOP DROP U. SPACE ;

: FILLLASTCNT  ( -- )
    DUP BYTESPERROW MOD DUP 0<> IF LASTCNT ! ELSE DROP 0 LASTCNT ! THEN ;

: PRINTLN  ( cnt -- )
    BYTESPERROW MOD 0= AND IF SWAP SPACE BYTESPERROW PRINTCHS DUP CR DUP PRINTADDR THEN DUP C@ DIGS2 1+ ; 

: PRINTLAST  ( addr len -- )
    LASTCNT @ DUP 0= IF DROP SPACE BYTESPERROW PRINTCHS ELSE DUP BYTESPERROW SWAP - 3 * 1+ SPACES PRINTCHS THEN ;

: HDUMP  ( addr len -- )
   HEX DUP 0= OVER LIMITLEN U> OR IF 2DROP EXIT THEN 
   FILLLASTCNT CR OVER SWAP    ( addr addr len )
   0 DO
    I 0= IF DUP PRINTADDR THEN 
    I 0 <> I PRINTLN
   LOOP DROP PRINTLAST CR ;

( **********HEXED**********)
( Uses dump.txt)
: HEXEDIT ;  ( marker for FORGET)

DECIMAL 

: KEY? KEYW DISCARD DROP ; 

360 CONSTANT BYTESPERSCR

28 CONSTANT KEYPGUP
29 CONSTANT KEYPGDN
22 CONSTANT KEYUP
23 CONSTANT KEYDOWN
24 CONSTANT KEYLEFT
25 CONSTANT KEYRIGHT
27 CONSTANT KEYESC

31 CONSTANT NHROWS 
64 CONSTANT NHCOLS 

10 CONSTANT BYTECOL

VARIABLE MCURX 	( Saved cursor-position of the main-screen) ( 2VARIABLE !?)
VARIABLE MCURY
VARIABLE CURX 	( Saved cursor-position, because PAGE sets it to 0,0) ( 2VARIABLE !?)
VARIABLE CURY

: SAVEMCUR  ( -- )
   GET-XY MCURY ! MCURX ! ;

: RESTOREMCUR  ( -- )
   MCURX @ MCURY @ AT-XY ;

: SAVECUR  ( -- )
   GET-XY CURY ! CURX ! ;

: RESTORECUR  ( -- )
   CURX @ CURY @ AT-XY ;

: ZEROHCURSOR  ( -- )
   0 0 AT-XY ;

: INITHCURSOR  ( -- )
   BYTECOL 1 AT-XY ;

: DOMSCR>  ( -- )
   0 0 NHCOLS NHROWS MSCR> ;

: DO>MSCR  ( -- )
   >MSCR OSPARSON SCROLLON RESTOREMCUR ;

: SHOWCTRLTEXT  ( -- )
    3 NHROWS AT-XY ." PGUP PGDN " 
   14 NHROWS AT-XY 127 EMIT  
   16 NHROWS AT-XY 128 EMIT  
   18 NHROWS AT-XY 129 EMIT  
   20 NHROWS AT-XY 130 EMIT  
   43 NHROWS AT-XY ." Press ESC to quit" ;

: INITSCR  ( -- )
   OSPARSOFF SCROLLOFF 
   32 REMCUR SAVEMCUR PAGE  
   SHOWCTRLTEXT 
   DOMSCR> ZEROHCURSOR ;

VARIABLE BEGADDR

BYTESPERROW 2* BYTESPERROW 1- + CONSTANT CHARSPERROW
CREATE X2BYTE CHARSPERROW ALLOT 
CREATE X2DIGIT CHARSPERROW ALLOT 
( HEXTABLE for capital letters)
( CREATE HEXTABLE 48 C, 49 C, 50 C, 51 C, 52 C, 53 C, 54 C, 55 C, 56 C, 57 C, 65 C, 66 C, 67 C, 68 C, 69 C, 70 C,)
CREATE HEXTABLE 48 C, 49 C, 50 C, 51 C, 52 C, 53 C, 54 C, 55 C, 56 C, 57 C, 97 C, 98 C, 99 C, 100 C, 101 C, 102 C,

: FILLX2BYTE  ( -- )
   X2BYTE BYTESPERROW 0 DO I 1+ OVER C! 1+ I 1+ OVER C! 1+ 0 OVER C! 1+ LOOP DROP ; 

: FILLX2DIGIT  ( -- )
   X2DIGIT BYTESPERROW 0 DO 1 OVER C! 1+ 2 OVER C! 1+ 0 OVER C! 1+ LOOP DROP ; 

: GETBYTEIDX  ( x -- idx )
   BYTECOL - X2BYTE + C@ 1- ;

: GETDIGITID  ( x -- 0|1 )   ( left or right digit of a byte)
   BYTECOL - X2DIGIT + C@ 1- ;

: GETBASE  ( y -- addr )
   BEGADDR @ SWAP 1- BYTESPERROW * + ;

: GETBYTEADDR  ( -- addr )
   GET-XY GETBASE SWAP GETBYTEIDX + ;

: GETCHAR  ( -- c )
   GETBYTEADDR C@ GET-XY DROP GETDIGITID 0= IF 4 RSHIFT ELSE 15 AND THEN HEXTABLE + C@ ;

: GETCHOFFS  ( c -- offs ) 
   DUP 57 <= IF 48 - ELSE 97 - 10 + THEN ;

: STORECHAR  ( c -- )
   GETCHOFFS GETBYTEADDR DUP C@ GET-XY DROP GETDIGITID 0= IF 15 AND ROT 4 LSHIFT ELSE 240 AND ROT THEN OR SWAP C! ; 

: KPGUP  ( -- )
   GETCHAR REMCUR
   BEGADDR @ BYTESPERSCR - DUP BEGADDR ! BYTESPERSCR SAVECUR PAGE HDUMP RESTORECUR 
   GETCHAR PUTCUR ;

: KPGDN  ( -- )
   GETCHAR REMCUR
   BEGADDR @ BYTESPERSCR + DUP BEGADDR ! BYTESPERSCR SAVECUR PAGE HDUMP RESTORECUR
   GETCHAR PUTCUR ;

: KUP  ( -- )
   GETCHAR REMCUR 
   GET-XY NIP 1 = 
   IF BEGADDR @ BYTESPERROW - DUP BEGADDR ! BYTESPERSCR SAVECUR PAGE HDUMP RESTORECUR 
   ELSE GET-XY 1- AT-XY 
   THEN GETCHAR PUTCUR ;

: KDOWN  ( -- )
   GETCHAR REMCUR 
   GET-XY NIP NHROWS 1- = 
   IF BEGADDR @ BYTESPERROW + DUP BEGADDR ! BYTESPERSCR SAVECUR PAGE HDUMP RESTORECUR 
   ELSE GET-XY 1+ AT-XY 
   THEN GETCHAR PUTCUR ;

: KLEFT  ( -- )
   GET-XY DROP BYTECOL U> 
   IF GETCHAR REMCUR GET-XY SWAP 1- DUP GETBYTEIDX 0< IF 1- THEN SWAP AT-XY GETCHAR PUTCUR 
   THEN ;

: KRIGHT  ( -- )
   GET-XY DROP BYTECOL CHARSPERROW 1- + U<  
   IF GETCHAR REMCUR GET-XY SWAP 1+ DUP GETBYTEIDX 0< IF 1+ THEN SWAP AT-XY GETCHAR PUTCUR 
   THEN ;

: DECIMAL?  ( c -- flag )
   DUP 48 >= SWAP 58 < AND ;

: HEXCHAR?  ( c -- flag )
   DUP DECIMAL? SWAP DUP 97 >= SWAP 103 < AND OR ;

: CTRLKEYS  ( key -- )
    CASE 
      KEYPGUP  OF KPGUP  ENDOF 
      KEYPGDN  OF KPGDN  ENDOF 
      KEYUP    OF KUP    ENDOF 
      KEYDOWN  OF KDOWN  ENDOF 
      KEYLEFT  OF KLEFT  ENDOF 
      KEYRIGHT OF KRIGHT ENDOF 
    ENDCASE ;

: NLCR  ( -- )
   GET-XY NIP NHROWS 1- = 
   IF BEGADDR @ BYTESPERROW + DUP BEGADDR ! BYTESPERSCR PAGE HDUMP BYTECOL NHROWS 1- AT-XY 
   ELSE BYTECOL GET-XY NIP 1+ AT-XY 
   THEN ;

VARIABLE CHBKGCLR

: OPAON  ( -- )
   1 OPAQUE ! CHBKGCURRCLR @ [ HEX ] FFFF AND CHBKGCLR ! BKGFGCLR @ FFFF AND CHBKGCURRCLR @ FFFF0000 AND OR CHBKGCURRCLR ! [ DECIMAL ] ;

: OPAOFF  ( -- )
   0 OPAQUE ! CHBKGCLR @ CHBKGCURRCLR @ [ HEX ] FFFF0000 AND OR CHBKGCURRCLR ! [ DECIMAL ] ;

: KEYS  ( -- )
   BEGIN 
     KEYW DISCARD DUP HEXCHAR? 
     IF DUP GETCHAR REMCUR DUP STORECHAR SAVECUR EMIT RESTORECUR KRIGHT GET-XY DROP CURX @ = IF NLCR THEN GETCHAR PUTCUR 
     ELSE DUP CTRLKEYS
     THEN
     KEYESC = 
   UNTIL ;

: HEXED  ( addr -- )
   HEX DUP BEGADDR ! FILLX2BYTE FILLX2DIGIT
   INITSCR BYTESPERSCR HDUMP INITHCURSOR GETCHAR PUTCUR OPAON KEYS OPAOFF DO>MSCR ; 


